----------------------------------------------
-- Set up table
----------------------------------------------
CREATE TABLE `lok_master_seq` (
  `idlok_all_seq` int(11) NOT NULL AUTO_INCREMENT,
  `object_type` varchar(45) NOT NULL COMMENT 'The table name for which sequence is to be created',
  `last_seq` int(11) NOT NULL DEFAULT '100000',
  `last_updated_by` varchar(45) DEFAULT NULL,
  `last_updated_date` date DEFAULT NULL,
  `object_intial` varchar(2) NOT NULL COMMENT 'It is the start which gets appended to the seq geneated. ',
  PRIMARY KEY (`idlok_all_seq`),
  UNIQUE KEY `object_type_UNIQUE` (`object_type`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1 COMMENT='Generate sequences for all the tables. It stores last used sequence';


----------------------------------------------------------







-- billrecord seq generator

CREATE DEFINER=`root`@`localhost` TRIGGER `kplok_dev_db`.`billrecord_BEFORE_INSERT` BEFORE INSERT ON `billrecord` FOR EACH ROW
begin
set @bill_seq = 0;
set @bill_init = "";
if NEW.bno is null then
select t.last_seq,t.object_inital into @bill_seq,@bill_init from lok_master_seq t where t.object_type = 'billrecord';
set @bill_seq = @bill_seq+1;


set NEW.bno = concat(@bill_init, @bill_seq);
end if;

-- update the last seq
update lok_master_seq set last_seq = @bill_seq where object_type = 'billrecord';
end

-- ----------------------------------------------------------------------------------------------------

-- receipt record seq generator

CREATE DEFINER = CURRENT_USER TRIGGER `kplok_dev_db`.`receiptrecord_BEFORE_INSERT` BEFORE INSERT ON `receiptrecord` FOR EACH ROW
BEGIN
set @rec_seq = 0;
set @rec_init = "";
if NEW.rctn is null then
select t.last_seq,t.object_inital into @rec_seq,@rec_init from lok_master_seq t where t.object_type = 'receiptrecord';
set @rec_seq = @rec_seq+1;


set NEW.rctn = concat(@rec_init, @rec_seq);
end if;

-- update the last seq
update lok_master_seq set last_seq = @rec_seq where object_type = 'receiptrecord';

end


-- --- --------------------------------
-- KYC Documents, store
----
create table customerdetails (
CUSTOMERID varchar(7),
FIRSTNAME  varchar(100),
LASTNAME   varchar(100),
PPPATH    varchar(255),
AADHARPATH varchar(255),
DLICENSEPATH varchar(255),
ELECTRICITY varchar(255),
PHOTOPATH  varchar(255),
SIGNPATH   varchar(255),
EMAILID    varchar(255),
ALTEMAILID    varchar(255),
MOBILENUM  varchar(15),
ALTMOBILENUM  varchar(15),
PHONENUM   varchar(15),
ALTPHONENUM   varchar(15),
ADDRESS1   varchar(255),
ADDRESS2   varchar(255),
ADDRESS3   varchar(255),
CITY       varchar(255),
STATE      varchar(255),
COUNTRY    varchar(255),
PINCODE    varchar(255),
LANDMARK   varchar(255),
CREATEDBY  varchar(100),
CREATEDDATE datetime,
MODIFIEDBY  varchar(100),
MODIFIEDDATE datetime,
NOTES     varchar(4000),
FOLIONUM  VARCHAR(45));


--------------------------------------------
--trigger to create primary key
------------------------------
CREATE DEFINER=`root`@`localhost` TRIGGER `kplok_dev_db`.`customer_table_BEFORE_INSERT` BEFORE INSERT ON `customer_table` FOR EACH ROW
begin
set @cust_seq = 0;
set @cust_init = "";
if NEW.customerid is null then
select t.last_seq,t.object_inital into @cust_seq,@cust_init from lok_master_seq t where t.object_type = 'customer_table';
set @cust_seq = @cust_seq+1;


set NEW.customerid = concat(@cust_init, @cust_seq);
end if;

-- update the last seq
update lok_master_seq set last_seq = @cust_seq where object_type = 'customer_table';
end

